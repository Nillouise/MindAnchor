<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- handnote -->
    <!-- 注意这里的value都是用双引号引起来的，也有种不引起来的写法，那是代表一个变量名字（这个变量名字也是在这个xml文件里设置导入的） -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="        jdbc:mysql://localhost:3306/mindanchor?characterEncoding=UTF-8&amp;serverTimezone=UTC" />
        <property name="username" value="root" />
        <property name="password" value="admin" />
    </bean>

    <!-- 注意这里mybatis扫描了两种东西，一个是xml文件（保存sql语句的mybatis xml文件），一个是用来生成mybatis实体查询类的接口（interface） -->
    <!--<context:component-scan base-package="Nillouise.service"/>-->
    <!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="Nillouise.mapper" />
    </bean>

    <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:Nillouise/mapper/*.xml"/>
        <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />-->
        <!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model"
            /> -->
    </bean>

    <!-- 注意到了这里，就不是mybatis的范畴了，只是单纯spring的bean对象（我猜） -->
    <!-- 自动扫描注解的bean -->
    <context:component-scan base-package="Nillouise.service" />
    <context:component-scan base-package="Nillouise.model"/>
    <!--&lt;!&ndash; 好像光光在这里扫描是没用的，还要在对应的类用注解如（@Repository，@Controller）注解，spring才能找到并正确注入 &ndash;&gt;-->
    <!-- spring好像不能往httpsessionlistener注入对象，https://stackoverflow.com/questions/11718216/httpsessionlistener-using-spring-injections-and-services-impossible-to-access -->
    <!--<context:component-scan base-package="Nillouise.listener" />-->

    <!--https://www.mkyong.com/spring/spring-how-to-do-dependency-injection-in-your-session-listener/-->
    <!--<bean id="SessionListenerService" class="Nillouise.service.UserInfoServiceImpl" />-->


    <!-- 定义converter -->
    <bean id="conversionService"
          class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <!--<list></list> 这里书上用这个标签，不过会报错 -->
            <util:list list-class="java.util.ArrayList">
                <bean class="Nillouise.converter.StringToDateConverter">
                    <constructor-arg type="java.lang.String"
                                     value="yyyy-MM-dd" />
                </bean>
            </util:list>
        </property>
    </bean>


</beans>